{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export function createMarkup(data) {\n    return data\n      .map(\n        ({\n          id,\n          webformatURL,\n          largeImageURL,\n          views,\n          likes,\n          comments,\n          downloads,\n          tags,\n        }) => {\n          return `\n      <a href=\"${largeImageURL}\" class=\"card\">\n         <img class=\"card__img\" src=\"${webformatURL}\" alt=\"${tags}\" />\n         <div class=\"card__info\">\n           <p class=\"card__numbers\"><span>Views:</span> ${views}</p>\n           <p class=\"card__numbers\"><span>Likes:</span> ${likes}</p>\n           <p class=\"card__numbers\"><span>Comments:</span> ${comments}</p>\n           <p class=\"card__numbers\"><span>Downloads:</span> ${downloads}</p>\n         </div>\n      </a>\n      `;\n        }\n      )\n      .join('');\n  }\n  ","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com';\nconst END_POINT = '/api/';\nconst API_KEY = '15968525-5a53092c6d62a7b9e458a529a';\n\nexport async function getImages(query) {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    image_type: 'photo',\n    safesearch: true,\n    orientation: 'horizontal',\n    q: query,\n  }).toString();\n\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Referrer-Policy': 'no-referrer',\n    'X-Requested-With': 'XMLHttpRequest',\n  };\n  const url = `${BASE_URL}${END_POINT}?${params}`;\n  try {\n    const res = await axios.get(url, headers);\n    return res.data;\n  } catch (error) {\n    if (error.response) {\n      iziToast.error({\n        title: 'Error',\n        message: `HTTP error! status: ${error.response.status} - ${error.response.statusText}`,\n      });\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: error.message,\n      });\n    }\n    return;\n  }\n}","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport {createMarkup} from './js/render-functions'\nimport {getImages} from './js/pixabay-api'\n\nconst searchForm = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\nconst fotoGallery = new SimpleLightbox('.gallery a');\nconst loader = document.querySelector('.loader');\nconst loaderOverlay = document.querySelector('.loader__overlay');\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  loader.style.display = \"block\";\n  loaderOverlay.style.display = \"block\";\n  setTimeout(() => {\n    loader.style.display = \"none\";\n    loaderOverlay.style.display = \"none\";\n  }, 1000);\n  const searchQuery = searchForm.elements.search.value.trim();\n  if (!searchQuery) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Empty query',\n      messageColor: '#fff',\n    });\n    return;\n  }\n  getImages(searchQuery)\n    .then(data => {\n      if(data.hits.length === 0) {\n        gallery.innerHTML = '';\n        throw new Error('Sorry, there are no images matching your search query. Please try again!');\n      }\n      const markup = createMarkup(data.hits);\n      gallery.innerHTML = markup;\n      fotoGallery.refresh();\n      iziToast.success({\n        title: 'Success',\n        message: 'Images loaded successfully',\n        messageColor: '#fff',\n      });\n    })\n    .catch(error => {\n      iziToast.error({\n        title: 'Error',\n        message: error.message,\n        backgroundColor: '#EF4040',\n        iconColor: '#ffffff',\n        messageColor: '#fff'\n      });\n    });\n};\nsearchForm.addEventListener('submit', handleSubmit);"],"names":["createMarkup","data","id","webformatURL","largeImageURL","views","likes","comments","downloads","tags","BASE_URL","END_POINT","API_KEY","getImages","query","params","headers","url","axios","error","searchForm","gallery","fotoGallery","SimpleLightbox","loader","loaderOverlay","handleSubmit","event","searchQuery","iziToast","markup"],"mappings":"owBAAO,SAASA,EAAaC,EAAM,CAC/B,OAAOA,EACJ,IACC,CAAC,CACC,GAAAC,EACA,aAAAC,EACA,cAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,EACA,KAAAC,CACV,IACiB;AAAA,iBACAL,CAAa;AAAA,uCACSD,CAAY,UAAUM,CAAI;AAAA;AAAA,0DAEPJ,CAAK;AAAA,0DACLC,CAAK;AAAA,6DACFC,CAAQ;AAAA,8DACPC,CAAS;AAAA;AAAA;AAAA,OAKhE,EACA,KAAK,EAAE,CACd,CCzBA,MAAME,EAAW,sBACXC,EAAY,QACZC,EAAU,qCAET,eAAeC,EAAUC,EAAO,CACrC,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKH,EACL,WAAY,QACZ,WAAY,GACZ,YAAa,aACb,EAAGE,CACP,CAAG,EAAE,SAAQ,EAELE,EAAU,CACd,OAAQ,mBACR,eAAgB,mBAChB,kBAAmB,cACnB,mBAAoB,gBACxB,EACQC,EAAM,GAAGP,CAAQ,GAAGC,CAAS,IAAII,CAAM,GAC7C,GAAI,CAEF,OADY,MAAMG,EAAM,IAAID,EAAKD,CAAO,GAC7B,IACZ,OAAQG,EAAO,CACVA,EAAM,SACR,SAAS,MAAM,CACb,MAAO,QACP,QAAS,uBAAuBA,EAAM,SAAS,MAAM,MAAMA,EAAM,SAAS,UAAU,EAC5F,CAAO,EAED,SAAS,MAAM,CACb,MAAO,QACP,QAASA,EAAM,OACvB,CAAO,EAEH,MACD,CACH,CC/BA,MAAMC,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAc,IAAIC,EAAe,YAAY,EAC7CC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAgB,SAAS,cAAc,kBAAkB,EAEzDC,EAAeC,GAAS,CAC5BA,EAAM,eAAc,EACpBH,EAAO,MAAM,QAAU,QACvBC,EAAc,MAAM,QAAU,QAC9B,WAAW,IAAM,CACfD,EAAO,MAAM,QAAU,OACvBC,EAAc,MAAM,QAAU,MAC/B,EAAE,GAAI,EACP,MAAMG,EAAcR,EAAW,SAAS,OAAO,MAAM,OACrD,GAAI,CAACQ,EAAa,CAChBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,cACT,aAAc,MACpB,CAAK,EACD,MACD,CACDhB,EAAUe,CAAW,EAClB,KAAK3B,GAAQ,CACZ,GAAGA,EAAK,KAAK,SAAW,EACtB,MAAAoB,EAAQ,UAAY,GACd,IAAI,MAAM,0EAA0E,EAE5F,MAAMS,EAAS9B,EAAaC,EAAK,IAAI,EACrCoB,EAAQ,UAAYS,EACpBR,EAAY,QAAO,EACnBO,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,6BACT,aAAc,MACtB,CAAO,CACP,CAAK,EACA,MAAMV,GAAS,CACdU,EAAS,MAAM,CACb,MAAO,QACP,QAASV,EAAM,QACf,gBAAiB,UACjB,UAAW,UACX,aAAc,MACtB,CAAO,CACP,CAAK,CACL,EACAC,EAAW,iBAAiB,SAAUM,CAAY"}